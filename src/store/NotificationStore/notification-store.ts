import {makeAutoObservable} from 'mobx';import {LoadingEnum, NotificationType} from "../types/types";import {createAlert} from "../../components/alert";export class NotificationStore {    isLoading: LoadingEnum = LoadingEnum.initial;    notification: NotificationType | undefined = undefined;    switcherNotification = false;    serverResponse: string | undefined = undefined;    setIsLoading = (isLoading: LoadingEnum): void => {        this.isLoading = isLoading;    };    setNotification = (        notification: NotificationType | undefined,        switcherNotification: boolean,        serverResponse: string | undefined,    ): void => {        this.switcherNotification = switcherNotification;        this.notification = notification;        this.serverResponse = serverResponse;        if (serverResponse) {            createAlert({                title: 'Сообщение',                message: serverResponse ?? 'Unstable internet connection, try again later',                buttons: [{text: 'Продолжить', style: "cancel"}]            })        }    };    constructor() {        makeAutoObservable(this)    }}export default new NotificationStore();